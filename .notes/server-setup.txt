sudo apt update # updates latest packages
sudo apt upgrade -y # install everything that's downloaded

# create new user for separation

adduser <username>

username: github
password: github

# add username to root group - this is needed for github actions to work

usermod -aG sudo <username>   # - a add to gourp -G to group "sudo"
usermod -aG docker <username> # - allow docker commands without password prompt

# check current user

pwd # show current folder

# switch to new username

sudo su - <username>

create a github token so we can pull the image from github containers to our server without the need to login our github account

create a classic token
 > https://github.com/settings/tokens/new

 enable
 write:packages 
  read:packages
 delete:packages   # this will delete old packages

docker-pull-image
 <github_token>

on local machine, login to github docker container registry with ff command
we will upload this to ghcr.io so we can pull it in the server

docker login --username marloeleven --password <github_token> ghcr.io

docker push ghcr.io/marloeleven/ui-prod:latest


step 4: connect to server and install docker

ssh root@146.190.5.77

https://docs.docker.com/engine/install/ubuntu/


step 6: in server (VPS)

pull docker image

# login to ghcr first
docker login --username marloeleven --password <github_token> ghcr.io

docker pull ghcr.io/marloeleven/ui-prod:latest

docker network create nextjs_laravel

run docker-compose up

step 7:

generate ssh in server(VPS), we will execute external commands via ssh

#generate
ssh-keygen it rsa -b 4096

#create a copy
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

#show 
cat ~/.ssh/id_rsa

#Copy the output to your clipboard. Make sure to add a linebreak after -----END RSA PRIVATE KEY-----

#add as ID_RSA environment variables in github repo
#add SERVER_IP and SERVER_USER as environment variables in github repo

